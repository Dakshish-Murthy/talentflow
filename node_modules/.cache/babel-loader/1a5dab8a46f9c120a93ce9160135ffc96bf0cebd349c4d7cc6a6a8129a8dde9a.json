{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\candidates\\\\CandidatesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors, DragOverlay } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, sortableKeyboardCoordinates } from '@dnd-kit/sortable';\nimport { useCandidates } from '../../hooks/useCandidates';\nimport SortableCandidateCard from './SortableCandidateCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandidatesList = ({\n  candidates: propCandidates\n}) => {\n  _s();\n  const {\n    candidates: hookCandidates,\n    updateCandidateStage,\n    loading\n  } = useCandidates();\n  const [activeId, setActiveId] = useState(null);\n  const [dragOverId, setDragOverId] = useState(null);\n\n  // Use prop candidates if provided, otherwise use hook candidates\n  const candidates = propCandidates || hookCandidates;\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 5\n    }\n  }), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const handleDragStart = event => {\n    const {\n      active\n    } = event;\n    setActiveId(active.id);\n    document.body.style.cursor = 'grabbing';\n\n    // Add visual effect to the dragged item\n    const activeElement = document.getElementById(active.id);\n    if (activeElement) {\n      activeElement.style.transform = 'rotate(2deg)';\n      activeElement.style.boxShadow = '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)';\n    }\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    setActiveId(null);\n    setDragOverId(null);\n    document.body.style.cursor = '';\n\n    // Reset all visual effects\n    document.querySelectorAll('.sortable-candidate').forEach(element => {\n      element.style.transform = '';\n      element.style.boxShadow = '';\n      element.style.borderLeft = '';\n    });\n    if (!over) return;\n    const candidateId = active.id;\n    const targetCandidateId = over.id;\n\n    // Find the target candidate to get its stage\n    const targetCandidate = candidates.find(c => c.id === targetCandidateId);\n    const draggedCandidate = candidates.find(c => c.id === candidateId);\n    if (targetCandidate && draggedCandidate && targetCandidate.id !== candidateId) {\n      // Only update if the stage is different\n      if (draggedCandidate.stage !== targetCandidate.stage) {\n        updateCandidateStage(candidateId, targetCandidate.stage);\n      }\n    }\n  };\n  const handleDragOver = event => {\n    const {\n      over\n    } = event;\n    setDragOverId((over === null || over === void 0 ? void 0 : over.id) || null);\n\n    // Add visual feedback to the drop target\n    document.querySelectorAll('.sortable-candidate').forEach(element => {\n      element.style.borderLeft = '';\n    });\n    if (over) {\n      const overElement = document.getElementById(over.id);\n      if (overElement) {\n        overElement.style.borderLeft = '4px solid #3b82f6';\n      }\n    }\n  };\n  const handleDragCancel = () => {\n    setActiveId(null);\n    setDragOverId(null);\n    document.body.style.cursor = '';\n\n    // Reset all visual effects\n    document.querySelectorAll('.sortable-candidate').forEach(element => {\n      element.style.transform = '';\n      element.style.boxShadow = '';\n      element.style.borderLeft = '';\n    });\n  };\n  const getStageBadgeColor = stage => {\n    const colors = {\n      applied: 'bg-blue-100 text-blue-800 border border-blue-200',\n      screen: 'bg-yellow-100 text-yellow-800 border border-yellow-200',\n      tech: 'bg-purple-100 text-purple-800 border border-purple-200',\n      offer: 'bg-green-100 text-green-800 border border-green-200',\n      hired: 'bg-emerald-100 text-emerald-800 border border-emerald-200',\n      rejected: 'bg-red-100 text-red-800 border border-red-200'\n    };\n    return colors[stage] || 'bg-gray-100 text-gray-800 border border-gray-200';\n  };\n  const getStageLabel = stage => {\n    const labels = {\n      applied: 'Applied',\n      screen: 'Screening',\n      tech: 'Technical',\n      offer: 'Offer',\n      hired: 'Hired',\n      rejected: 'Rejected'\n    };\n    return labels[stage] || stage;\n  };\n  const activeCandidate = activeId ? candidates.find(c => c.id === activeId) : null;\n  if (loading && !propCandidates) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl border border-gray-200 shadow-soft p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-3 text-gray-600\",\n          children: \"Loading candidates...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCenter,\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    onDragOver: handleDragOver,\n    onDragCancel: handleDragCancel,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl border border-gray-200 shadow-soft overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-gray-50 to-blue-50 px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900\",\n              children: [\"Candidate List (\", candidates.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: \"Drag candidates to change their stage. Drop on a candidate to match their stage.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2 text-sm text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Drag & Drop Enabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divide-y divide-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(SortableContext, {\n          items: candidates.map(c => c.id),\n          strategy: verticalListSortingStrategy,\n          children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(SortableCandidateCard, {\n            candidate: candidate,\n            stageBadgeColor: getStageBadgeColor(candidate.stage),\n            stageLabel: getStageLabel(candidate.stage),\n            isDragging: activeId === candidate.id,\n            isDragOver: dragOverId === candidate.id\n          }, candidate.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), candidates.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 bg-gradient-to-r from-blue-100 to-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-8 h-8 text-gray-400\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 4v16m8-8H4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-lg\",\n          children: \"No candidates found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 text-sm mt-1\",\n          children: \"Try adjusting your filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), candidates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 border-t border-blue-200 px-6 py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center space-x-2 text-sm text-blue-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 10V3L4 14h7v7l9-11h-7z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Tip: Drag a candidate onto another to match their stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: activeCandidate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transform rotate-3 scale-105 opacity-90\",\n        children: /*#__PURE__*/_jsxDEV(SortableCandidateCard, {\n          candidate: activeCandidate,\n          stageBadgeColor: getStageBadgeColor(activeCandidate.stage),\n          stageLabel: getStageLabel(activeCandidate.stage),\n          isDragging: true,\n          isDragOver: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(CandidatesList, \"1RaA1vtDjJfXTfDHnNMq9S7FZyU=\", false, function () {\n  return [useCandidates, useSensors, useSensor, useSensor];\n});\n_c = CandidatesList;\nexport default CandidatesList;\nvar _c;\n$RefreshReg$(_c, \"CandidatesList\");","map":{"version":3,"names":["React","useState","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","DragOverlay","SortableContext","verticalListSortingStrategy","sortableKeyboardCoordinates","useCandidates","SortableCandidateCard","jsxDEV","_jsxDEV","CandidatesList","candidates","propCandidates","_s","hookCandidates","updateCandidateStage","loading","activeId","setActiveId","dragOverId","setDragOverId","sensors","activationConstraint","distance","coordinateGetter","handleDragStart","event","active","id","document","body","style","cursor","activeElement","getElementById","transform","boxShadow","handleDragEnd","over","querySelectorAll","forEach","element","borderLeft","candidateId","targetCandidateId","targetCandidate","find","c","draggedCandidate","stage","handleDragOver","overElement","handleDragCancel","getStageBadgeColor","colors","applied","screen","tech","offer","hired","rejected","getStageLabel","labels","activeCandidate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","collisionDetection","onDragStart","onDragEnd","onDragOver","onDragCancel","length","items","map","strategy","candidate","stageBadgeColor","stageLabel","isDragging","isDragOver","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/candidates/CandidatesList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  DndContext,\r\n  closestCenter,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  DragEndEvent,\r\n  DragStartEvent,\r\n  DragOverlay,\r\n} from '@dnd-kit/core';\r\nimport {\r\n  SortableContext,\r\n  verticalListSortingStrategy,\r\n  sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\nimport { Candidate } from '../../types';\r\nimport { useCandidates } from '../../hooks/useCandidates';\r\nimport SortableCandidateCard from './SortableCandidateCard';\r\n\r\ninterface CandidatesListProps {\r\n  candidates?: Candidate[];\r\n}\r\n\r\nconst CandidatesList: React.FC<CandidatesListProps> = ({ candidates: propCandidates }) => {\r\n  const { \r\n    candidates: hookCandidates, \r\n    updateCandidateStage,\r\n    loading \r\n  } = useCandidates();\r\n\r\n  const [activeId, setActiveId] = useState<string | null>(null);\r\n  const [dragOverId, setDragOverId] = useState<string | null>(null);\r\n\r\n  // Use prop candidates if provided, otherwise use hook candidates\r\n  const candidates = propCandidates || hookCandidates;\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 5,\r\n      },\r\n    }),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragStart = (event: DragStartEvent) => {\r\n    const { active } = event;\r\n    setActiveId(active.id as string);\r\n    document.body.style.cursor = 'grabbing';\r\n    \r\n    // Add visual effect to the dragged item\r\n    const activeElement = document.getElementById(active.id as string);\r\n    if (activeElement) {\r\n      activeElement.style.transform = 'rotate(2deg)';\r\n      activeElement.style.boxShadow = '0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)';\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event;\r\n    setActiveId(null);\r\n    setDragOverId(null);\r\n    document.body.style.cursor = '';\r\n\r\n    // Reset all visual effects\r\n    document.querySelectorAll('.sortable-candidate').forEach(element => {\r\n      (element as HTMLElement).style.transform = '';\r\n      (element as HTMLElement).style.boxShadow = '';\r\n      (element as HTMLElement).style.borderLeft = '';\r\n    });\r\n\r\n    if (!over) return;\r\n\r\n    const candidateId = active.id as string;\r\n    const targetCandidateId = over.id as string;\r\n\r\n    // Find the target candidate to get its stage\r\n    const targetCandidate = candidates.find(c => c.id === targetCandidateId);\r\n    const draggedCandidate = candidates.find(c => c.id === candidateId);\r\n    \r\n    if (targetCandidate && draggedCandidate && targetCandidate.id !== candidateId) {\r\n      // Only update if the stage is different\r\n      if (draggedCandidate.stage !== targetCandidate.stage) {\r\n        updateCandidateStage(candidateId, targetCandidate.stage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event: DragEndEvent) => {\r\n    const { over } = event;\r\n    setDragOverId(over?.id as string || null);\r\n\r\n    // Add visual feedback to the drop target\r\n    document.querySelectorAll('.sortable-candidate').forEach(element => {\r\n      (element as HTMLElement).style.borderLeft = '';\r\n    });\r\n\r\n    if (over) {\r\n      const overElement = document.getElementById(over.id as string);\r\n      if (overElement) {\r\n        overElement.style.borderLeft = '4px solid #3b82f6';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDragCancel = () => {\r\n    setActiveId(null);\r\n    setDragOverId(null);\r\n    document.body.style.cursor = '';\r\n    \r\n    // Reset all visual effects\r\n    document.querySelectorAll('.sortable-candidate').forEach(element => {\r\n      (element as HTMLElement).style.transform = '';\r\n      (element as HTMLElement).style.boxShadow = '';\r\n      (element as HTMLElement).style.borderLeft = '';\r\n    });\r\n  };\r\n\r\n  const getStageBadgeColor = (stage: string) => {\r\n    const colors = {\r\n      applied: 'bg-blue-100 text-blue-800 border border-blue-200',\r\n      screen: 'bg-yellow-100 text-yellow-800 border border-yellow-200',\r\n      tech: 'bg-purple-100 text-purple-800 border border-purple-200',\r\n      offer: 'bg-green-100 text-green-800 border border-green-200',\r\n      hired: 'bg-emerald-100 text-emerald-800 border border-emerald-200',\r\n      rejected: 'bg-red-100 text-red-800 border border-red-200',\r\n    };\r\n    return colors[stage as keyof typeof colors] || 'bg-gray-100 text-gray-800 border border-gray-200';\r\n  };\r\n\r\n  const getStageLabel = (stage: string) => {\r\n    const labels = {\r\n      applied: 'Applied',\r\n      screen: 'Screening',\r\n      tech: 'Technical',\r\n      offer: 'Offer',\r\n      hired: 'Hired',\r\n      rejected: 'Rejected',\r\n    };\r\n    return labels[stage as keyof typeof labels] || stage;\r\n  };\r\n\r\n  const activeCandidate = activeId ? candidates.find(c => c.id === activeId) : null;\r\n\r\n  if (loading && !propCandidates) {\r\n    return (\r\n      <div className=\"bg-white rounded-2xl border border-gray-200 shadow-soft p-8\">\r\n        <div className=\"flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n          <span className=\"ml-3 text-gray-600\">Loading candidates...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DndContext\r\n      sensors={sensors}\r\n      collisionDetection={closestCenter}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onDragOver={handleDragOver}\r\n      onDragCancel={handleDragCancel}\r\n    >\r\n      <div className=\"bg-white rounded-2xl border border-gray-200 shadow-soft overflow-hidden\">\r\n        {/* List Header */}\r\n        <div className=\"bg-gradient-to-r from-gray-50 to-blue-50 px-6 py-4 border-b border-gray-200\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Candidate List ({candidates.length})\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                Drag candidates to change their stage. Drop on a candidate to match their stage.\r\n              </p>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\r\n              <span>Drag & Drop Enabled</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Candidates */}\r\n        <div className=\"divide-y divide-gray-100\">\r\n          <SortableContext items={candidates.map(c => c.id)} strategy={verticalListSortingStrategy}>\r\n            {candidates.map((candidate) => (\r\n              <SortableCandidateCard\r\n                key={candidate.id}\r\n                candidate={candidate}\r\n                stageBadgeColor={getStageBadgeColor(candidate.stage)}\r\n                stageLabel={getStageLabel(candidate.stage)}\r\n                isDragging={activeId === candidate.id}\r\n                isDragOver={dragOverId === candidate.id}\r\n              />\r\n            ))}\r\n          </SortableContext>\r\n        </div>\r\n\r\n        {candidates.length === 0 && !loading && (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"w-16 h-16 bg-gradient-to-r from-blue-100 to-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n              </svg>\r\n            </div>\r\n            <p className=\"text-gray-500 text-lg\">No candidates found</p>\r\n            <p className=\"text-gray-400 text-sm mt-1\">Try adjusting your filters</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Drag Hint */}\r\n        {candidates.length > 0 && (\r\n          <div className=\"bg-blue-50 border-t border-blue-200 px-6 py-3\">\r\n            <div className=\"flex items-center justify-center space-x-2 text-sm text-blue-700\">\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n              </svg>\r\n              <span>Tip: Drag a candidate onto another to match their stage</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Drag Overlay */}\r\n      <DragOverlay>\r\n        {activeCandidate ? (\r\n          <div className=\"transform rotate-3 scale-105 opacity-90\">\r\n            <SortableCandidateCard\r\n              candidate={activeCandidate}\r\n              stageBadgeColor={getStageBadgeColor(activeCandidate.stage)}\r\n              stageLabel={getStageLabel(activeCandidate.stage)}\r\n              isDragging={true}\r\n              isDragOver={false}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </DragOverlay>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default CandidatesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}