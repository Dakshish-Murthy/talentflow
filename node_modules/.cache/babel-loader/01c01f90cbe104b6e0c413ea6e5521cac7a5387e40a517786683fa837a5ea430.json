{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\jobs\\\\JobList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, sortableKeyboardCoordinates } from '@dnd-kit/sortable';\nimport JobCard from './JobCard';\nimport { useJobs } from '../../hooks/useJobs';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = ({\n  jobs\n}) => {\n  _s();\n  const {\n    handleReorder\n  } = useJobs();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const onDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (over && active.id !== over.id) {\n      const fromOrder = parseInt(active.id);\n      const toOrder = parseInt(over.id);\n      if (fromOrder !== toOrder) {\n        handleReorder(fromOrder, toOrder);\n      }\n    }\n  };\n  if (jobs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto w-24 h-24 bg-gradient-to-r from-gray-200 to-gray-300 rounded-full flex items-center justify-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-10 h-10 text-gray-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900 mb-2\",\n        children: \"No jobs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 max-w-sm mx-auto\",\n        children: \"Get started by creating a new job posting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Only enable drag and drop for HR users\n  if ((user === null || user === void 0 ? void 0 : user.role) === 'hr') {\n    return /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCenter,\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: jobs.map(job => job.order.toString()),\n        strategy: verticalListSortingStrategy,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 p-6\",\n          children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n            job: job,\n            index: index\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Regular list for candidates\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4 p-6\",\n    children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job,\n      index: index\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"MVdCYf2+FM8gVmTYK4ap9g1buDg=\", false, function () {\n  return [useJobs, useSelector, useSensors, useSensor, useSensor];\n});\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","verticalListSortingStrategy","sortableKeyboardCoordinates","JobCard","useJobs","useSelector","jsxDEV","_jsxDEV","JobList","jobs","_s","handleReorder","user","state","auth","sensors","coordinateGetter","onDragEnd","event","active","over","id","fromOrder","parseInt","toOrder","length","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","role","collisionDetection","items","map","job","order","toString","strategy","index","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/jobs/JobList.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  DndContext,\r\n  closestCenter,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  DragEndEvent,\r\n} from '@dnd-kit/core';\r\nimport {\r\n  SortableContext,\r\n  verticalListSortingStrategy,\r\n  sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\nimport { Job } from '../../types';\r\nimport JobCard from './JobCard';\r\nimport { useJobs } from '../../hooks/useJobs';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\n\r\ninterface JobListProps {\r\n  jobs: Job[];\r\n}\r\n\r\nconst JobList: React.FC<JobListProps> = ({ jobs }) => {\r\n  const { handleReorder } = useJobs();\r\n  const { user } = useSelector((state: RootState) => state.auth);\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const onDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event;\r\n\r\n    if (over && active.id !== over.id) {\r\n      const fromOrder = parseInt(active.id as string);\r\n      const toOrder = parseInt(over.id as string);\r\n\r\n      if (fromOrder !== toOrder) {\r\n        handleReorder(fromOrder, toOrder);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (jobs.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"mx-auto w-24 h-24 bg-gradient-to-r from-gray-200 to-gray-300 rounded-full flex items-center justify-center mb-4\">\r\n          <svg className=\"w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n        </div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No jobs found</h3>\r\n        <p className=\"text-gray-500 max-w-sm mx-auto\">\r\n          Get started by creating a new job posting.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Only enable drag and drop for HR users\r\n  if (user?.role === 'hr') {\r\n    return (\r\n      <DndContext\r\n        sensors={sensors}\r\n        collisionDetection={closestCenter}\r\n        onDragEnd={onDragEnd}\r\n      >\r\n        <SortableContext items={jobs.map(job => job.order.toString())} strategy={verticalListSortingStrategy}>\r\n          <div className=\"space-y-4 p-6\">\r\n            {jobs.map((job, index) => (\r\n              <JobCard key={job.id} job={job} index={index} />\r\n            ))}\r\n          </div>\r\n        </SortableContext>\r\n      </DndContext>\r\n    );\r\n  }\r\n\r\n  // Regular list for candidates\r\n  return (\r\n    <div className=\"space-y-4 p-6\">\r\n      {jobs.map((job, index) => (\r\n        <JobCard key={job.id} job={job} index={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}