{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      if (action.payload.role === 'hr') {\n        state.user = {\n          id: 'hr-1',\n          name: 'HR Manager',\n          role: 'hr'\n        };\n      } else {\n        state.user = {\n          id: action.payload.userId || 'candidate-1',\n          name: 'Candidate',\n          role: 'candidate'\n        };\n      }\n      state.isAuthenticated = true;\n    },\n    logout: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","isAuthenticated","authSlice","name","reducers","login","state","action","payload","role","id","userId","logout","actions","reducer"],"sources":["C:/Users/Dakshish/talentflow/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n  user: null | { id: string; name: string; role: 'hr' | 'candidate' };\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login: (state, action: PayloadAction<{ role: 'hr' | 'candidate'; userId?: string }>) => {\r\n      if (action.payload.role === 'hr') {\r\n        state.user = { id: 'hr-1', name: 'HR Manager', role: 'hr' };\r\n      } else {\r\n        state.user = { \r\n          id: action.payload.userId || 'candidate-1', \r\n          name: 'Candidate', \r\n          role: 'candidate' \r\n        };\r\n      }\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAoE,KAAK;MACtF,IAAIA,MAAM,CAACC,OAAO,CAACC,IAAI,KAAK,IAAI,EAAE;QAChCH,KAAK,CAACN,IAAI,GAAG;UAAEU,EAAE,EAAE,MAAM;UAAEP,IAAI,EAAE,YAAY;UAAEM,IAAI,EAAE;QAAK,CAAC;MAC7D,CAAC,MAAM;QACLH,KAAK,CAACN,IAAI,GAAG;UACXU,EAAE,EAAEH,MAAM,CAACC,OAAO,CAACG,MAAM,IAAI,aAAa;UAC1CR,IAAI,EAAE,WAAW;UACjBM,IAAI,EAAE;QACR,CAAC;MACH;MACAH,KAAK,CAACL,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDW,MAAM,EAAGN,KAAK,IAAK;MACjBA,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBM,KAAK,CAACL,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,KAAK;EAAEO;AAAO,CAAC,GAAGV,SAAS,CAACW,OAAO;AAClD,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}