{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\candidates\\\\MentionsInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock team members for mentions\nconst teamMembers = ['alex', 'brian', 'casey', 'dana', 'emma', 'frank', 'grace', 'henry'];\nconst MentionsInput = ({\n  value,\n  onChange,\n  placeholder = \"Type your message...\",\n  rows = 3\n}) => {\n  _s();\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [suggestionIndex, setSuggestionIndex] = useState(0);\n  const [triggerPosition, setTriggerPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const textareaRef = useRef(null);\n  const handleInputChange = e => {\n    const newValue = e.target.value;\n    onChange(newValue);\n\n    // Check for @ mention trigger\n    const cursorPosition = e.target.selectionStart;\n    const textBeforeCursor = newValue.substring(0, cursorPosition);\n    const lastAtIndex = textBeforeCursor.lastIndexOf('@');\n    if (lastAtIndex !== -1) {\n      const textAfterAt = textBeforeCursor.substring(lastAtIndex + 1);\n      const spaceIndex = textAfterAt.indexOf(' ');\n      if (spaceIndex === -1) {\n        // We're in a mention\n        const query = textAfterAt.toLowerCase();\n        const filteredSuggestions = teamMembers.filter(member => member.toLowerCase().includes(query));\n        setSuggestions(filteredSuggestions);\n        setShowSuggestions(filteredSuggestions.length > 0);\n\n        // Calculate position for suggestions dropdown\n        if (textareaRef.current) {\n          const textarea = textareaRef.current;\n          const lines = textBeforeCursor.split('\\n');\n          const currentLine = lines[lines.length - 1];\n          const charWidth = 8; // Approximate character width\n          const lineHeight = 20; // Approximate line height\n\n          setTriggerPosition({\n            left: currentLine.length * charWidth,\n            top: (lines.length - 1) * lineHeight\n          });\n        }\n      } else {\n        setShowSuggestions(false);\n      }\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n  const handleSuggestionSelect = suggestion => {\n    if (!textareaRef.current) return;\n    const textarea = textareaRef.current;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = value.substring(0, cursorPosition);\n    const lastAtIndex = textBeforeCursor.lastIndexOf('@');\n    if (lastAtIndex !== -1) {\n      const newValue = value.substring(0, lastAtIndex) + `@${suggestion} ` + value.substring(cursorPosition);\n      onChange(newValue);\n      setShowSuggestions(false);\n\n      // Set cursor position after the mention\n      setTimeout(() => {\n        const newCursorPosition = lastAtIndex + suggestion.length + 2;\n        textarea.setSelectionRange(newCursorPosition, newCursorPosition);\n        textarea.focus();\n      }, 0);\n    }\n  };\n  const handleKeyDown = e => {\n    if (showSuggestions) {\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        setSuggestionIndex(prev => prev < suggestions.length - 1 ? prev + 1 : prev);\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        setSuggestionIndex(prev => prev > 0 ? prev - 1 : prev);\n      } else if (e.key === 'Enter' && suggestions.length > 0) {\n        e.preventDefault();\n        handleSuggestionSelect(suggestions[suggestionIndex]);\n      } else if (e.key === 'Escape') {\n        setShowSuggestions(false);\n      }\n    }\n  };\n  useEffect(() => {\n    // Close suggestions when clicking outside\n    const handleClickOutside = e => {\n      if (showSuggestions && textareaRef.current && !textareaRef.current.contains(e.target)) {\n        setShowSuggestions(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [showSuggestions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      value: value,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown,\n      placeholder: placeholder,\n      rows: rows,\n      className: \"block w-full border border-gray-300 rounded-md shadow-sm px-3 py-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute z-10 mt-1 w-48 bg-white rounded-md shadow-lg border border-gray-200 max-h-60 overflow-y-auto\",\n      style: {\n        top: `${triggerPosition.top + 30}px`,\n        left: `${triggerPosition.left}px`\n      },\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 focus:bg-gray-100 focus:outline-none ${index === suggestionIndex ? 'bg-gray-100' : ''}`,\n        onClick: () => handleSuggestionSelect(suggestion),\n        children: [\"@\", suggestion]\n      }, suggestion, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(MentionsInput, \"vHzRrQo3qGhVDPve6BHKwhE9tNE=\");\n_c = MentionsInput;\nexport default MentionsInput;\nvar _c;\n$RefreshReg$(_c, \"MentionsInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","teamMembers","MentionsInput","value","onChange","placeholder","rows","_s","showSuggestions","setShowSuggestions","suggestions","setSuggestions","suggestionIndex","setSuggestionIndex","triggerPosition","setTriggerPosition","top","left","textareaRef","handleInputChange","e","newValue","target","cursorPosition","selectionStart","textBeforeCursor","substring","lastAtIndex","lastIndexOf","textAfterAt","spaceIndex","indexOf","query","toLowerCase","filteredSuggestions","filter","member","includes","length","current","textarea","lines","split","currentLine","charWidth","lineHeight","handleSuggestionSelect","suggestion","setTimeout","newCursorPosition","setSelectionRange","focus","handleKeyDown","key","preventDefault","prev","handleClickOutside","contains","document","addEventListener","removeEventListener","className","children","ref","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","style","map","index","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/candidates/MentionsInput.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\ninterface MentionsInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n  rows?: number;\r\n}\r\n\r\n// Mock team members for mentions\r\nconst teamMembers = [\r\n  'alex',\r\n  'brian',\r\n  'casey',\r\n  'dana',\r\n  'emma',\r\n  'frank',\r\n  'grace',\r\n  'henry'\r\n];\r\n\r\nconst MentionsInput: React.FC<MentionsInputProps> = ({\r\n  value,\r\n  onChange,\r\n  placeholder = \"Type your message...\",\r\n  rows = 3\r\n}) => {\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n  const [suggestionIndex, setSuggestionIndex] = useState(0);\r\n  const [triggerPosition, setTriggerPosition] = useState({ top: 0, left: 0 });\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newValue = e.target.value;\r\n    onChange(newValue);\r\n\r\n    // Check for @ mention trigger\r\n    const cursorPosition = e.target.selectionStart;\r\n    const textBeforeCursor = newValue.substring(0, cursorPosition);\r\n    const lastAtIndex = textBeforeCursor.lastIndexOf('@');\r\n\r\n    if (lastAtIndex !== -1) {\r\n      const textAfterAt = textBeforeCursor.substring(lastAtIndex + 1);\r\n      const spaceIndex = textAfterAt.indexOf(' ');\r\n      \r\n      if (spaceIndex === -1) {\r\n        // We're in a mention\r\n        const query = textAfterAt.toLowerCase();\r\n        const filteredSuggestions = teamMembers.filter(member =>\r\n          member.toLowerCase().includes(query)\r\n        );\r\n        \r\n        setSuggestions(filteredSuggestions);\r\n        setShowSuggestions(filteredSuggestions.length > 0);\r\n        \r\n        // Calculate position for suggestions dropdown\r\n        if (textareaRef.current) {\r\n          const textarea = textareaRef.current;\r\n          const lines = textBeforeCursor.split('\\n');\r\n          const currentLine = lines[lines.length - 1];\r\n          const charWidth = 8; // Approximate character width\r\n          const lineHeight = 20; // Approximate line height\r\n          \r\n          setTriggerPosition({\r\n            left: currentLine.length * charWidth,\r\n            top: (lines.length - 1) * lineHeight\r\n          });\r\n        }\r\n      } else {\r\n        setShowSuggestions(false);\r\n      }\r\n    } else {\r\n      setShowSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionSelect = (suggestion: string) => {\r\n    if (!textareaRef.current) return;\r\n\r\n    const textarea = textareaRef.current;\r\n    const cursorPosition = textarea.selectionStart;\r\n    const textBeforeCursor = value.substring(0, cursorPosition);\r\n    const lastAtIndex = textBeforeCursor.lastIndexOf('@');\r\n    \r\n    if (lastAtIndex !== -1) {\r\n      const newValue = value.substring(0, lastAtIndex) + `@${suggestion} ` + value.substring(cursorPosition);\r\n      onChange(newValue);\r\n      setShowSuggestions(false);\r\n      \r\n      // Set cursor position after the mention\r\n      setTimeout(() => {\r\n        const newCursorPosition = lastAtIndex + suggestion.length + 2;\r\n        textarea.setSelectionRange(newCursorPosition, newCursorPosition);\r\n        textarea.focus();\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (showSuggestions) {\r\n      if (e.key === 'ArrowDown') {\r\n        e.preventDefault();\r\n        setSuggestionIndex(prev => \r\n          prev < suggestions.length - 1 ? prev + 1 : prev\r\n        );\r\n      } else if (e.key === 'ArrowUp') {\r\n        e.preventDefault();\r\n        setSuggestionIndex(prev => prev > 0 ? prev - 1 : prev);\r\n      } else if (e.key === 'Enter' && suggestions.length > 0) {\r\n        e.preventDefault();\r\n        handleSuggestionSelect(suggestions[suggestionIndex]);\r\n      } else if (e.key === 'Escape') {\r\n        setShowSuggestions(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Close suggestions when clicking outside\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      if (showSuggestions && textareaRef.current && !textareaRef.current.contains(e.target as Node)) {\r\n        setShowSuggestions(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, [showSuggestions]);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <textarea\r\n        ref={textareaRef}\r\n        value={value}\r\n        onChange={handleInputChange}\r\n        onKeyDown={handleKeyDown}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className=\"block w-full border border-gray-300 rounded-md shadow-sm px-3 py-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n      />\r\n      \r\n      {showSuggestions && (\r\n        <div\r\n          className=\"absolute z-10 mt-1 w-48 bg-white rounded-md shadow-lg border border-gray-200 max-h-60 overflow-y-auto\"\r\n          style={{\r\n            top: `${triggerPosition.top + 30}px`,\r\n            left: `${triggerPosition.left}px`\r\n          }}\r\n        >\r\n          {suggestions.map((suggestion, index) => (\r\n            <button\r\n              key={suggestion}\r\n              type=\"button\"\r\n              className={`block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 focus:bg-gray-100 focus:outline-none ${\r\n                index === suggestionIndex ? 'bg-gray-100' : ''\r\n              }`}\r\n              onClick={() => handleSuggestionSelect(suggestion)}\r\n            >\r\n              @{suggestion}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MentionsInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}