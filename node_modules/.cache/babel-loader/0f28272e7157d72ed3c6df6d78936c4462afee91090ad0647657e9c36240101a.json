{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\candidates\\\\Timeline.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useCandidates } from '../../hooks/useCandidates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = ({\n  candidateId\n}) => {\n  _s();\n  const {\n    loadTimeline\n  } = useCandidates();\n  const [timeline, setTimeline] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTimeline = async () => {\n      try {\n        // Mock timeline data - in real app, this would come from API\n        const mockTimeline = [{\n          id: '1',\n          type: 'stage_change',\n          stage: 'applied',\n          date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n          description: 'Applied for position'\n        }, {\n          id: '2',\n          type: 'stage_change',\n          stage: 'screen',\n          date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\n          description: 'Moved to screening stage'\n        }, {\n          id: '3',\n          type: 'note_added',\n          stage: 'screen',\n          date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\n          description: 'HR review completed'\n        }];\n        setTimeline(mockTimeline);\n      } catch (error) {\n        console.error('Failed to load timeline:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTimeline();\n  }, [candidateId, loadTimeline]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-4\",\n      children: \"Loading timeline...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flow-root\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"-mb-8\",\n      children: timeline.map((event, eventIdx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative pb-8\",\n          children: [eventIdx !== timeline.length - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `h-8 w-8 rounded-full flex items-center justify-center ring-8 ring-white ${event.type === 'stage_change' ? 'bg-blue-500' : 'bg-green-500'}`,\n                children: event.type === 'stage_change' ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-5 h-5 text-white\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"w-5 h-5 text-white\",\n                  fill: \"none\",\n                  viewBox: \"0 0 24 24\",\n                  stroke: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"min-w-0 flex-1 pt-1.5 flex justify-between space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-700\",\n                  children: event.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right text-sm whitespace-nowrap text-gray-500\",\n                children: /*#__PURE__*/_jsxDEV(\"time\", {\n                  dateTime: event.date.toISOString(),\n                  children: [event.date.toLocaleDateString(), \" at \", event.date.toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"3/RajhQ0u1cZ+infEDUwPMXADgA=\", false, function () {\n  return [useCandidates];\n});\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useEffect","useState","useCandidates","jsxDEV","_jsxDEV","Timeline","candidateId","_s","loadTimeline","timeline","setTimeline","loading","setLoading","fetchTimeline","mockTimeline","id","type","stage","date","Date","now","description","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","eventIdx","length","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","dateTime","toISOString","toLocaleDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/candidates/Timeline.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useCandidates } from '../../hooks/useCandidates';\r\n\r\ninterface TimelineProps {\r\n  candidateId: string;\r\n}\r\n\r\ninterface TimelineEvent {\r\n  id: string;\r\n  type: string;\r\n  stage: string;\r\n  date: Date;\r\n  description: string;\r\n}\r\n\r\nconst Timeline: React.FC<TimelineProps> = ({ candidateId }) => {\r\n  const { loadTimeline } = useCandidates();\r\n  const [timeline, setTimeline] = useState<TimelineEvent[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTimeline = async () => {\r\n      try {\r\n        // Mock timeline data - in real app, this would come from API\r\n        const mockTimeline: TimelineEvent[] = [\r\n          {\r\n            id: '1',\r\n            type: 'stage_change',\r\n            stage: 'applied',\r\n            date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\r\n            description: 'Applied for position'\r\n          },\r\n          {\r\n            id: '2',\r\n            type: 'stage_change',\r\n            stage: 'screen',\r\n            date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\r\n            description: 'Moved to screening stage'\r\n          },\r\n          {\r\n            id: '3',\r\n            type: 'note_added',\r\n            stage: 'screen',\r\n            date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),\r\n            description: 'HR review completed'\r\n          }\r\n        ];\r\n        setTimeline(mockTimeline);\r\n      } catch (error) {\r\n        console.error('Failed to load timeline:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTimeline();\r\n  }, [candidateId, loadTimeline]);\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center py-4\">Loading timeline...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flow-root\">\r\n      <ul className=\"-mb-8\">\r\n        {timeline.map((event, eventIdx) => (\r\n          <li key={event.id}>\r\n            <div className=\"relative pb-8\">\r\n              {eventIdx !== timeline.length - 1 ? (\r\n                <span\r\n                  className=\"absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : null}\r\n              <div className=\"relative flex space-x-3\">\r\n                <div>\r\n                  <span\r\n                    className={`h-8 w-8 rounded-full flex items-center justify-center ring-8 ring-white ${\r\n                      event.type === 'stage_change' ? 'bg-blue-500' : 'bg-green-500'\r\n                    }`}\r\n                  >\r\n                    {event.type === 'stage_change' ? (\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                      </svg>\r\n                    ) : (\r\n                      <svg className=\"w-5 h-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                      </svg>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <div className=\"min-w-0 flex-1 pt-1.5 flex justify-between space-x-4\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-700\">{event.description}</p>\r\n                  </div>\r\n                  <div className=\"text-right text-sm whitespace-nowrap text-gray-500\">\r\n                    <time dateTime={event.date.toISOString()}>\r\n                      {event.date.toLocaleDateString()} at {event.date.toLocaleTimeString()}\r\n                    </time>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}