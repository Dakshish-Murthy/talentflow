{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\assessments\\\\ConditionalLogic.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionalLogic = ({\n  question,\n  section,\n  onUpdate\n}) => {\n  _s();\n  var _question$conditional, _question$conditional2, _question$conditional3;\n  const [showConditional, setShowConditional] = useState(false);\n  const previousQuestions = section.questions.filter(q => q.id !== question.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-t border-gray-200 pt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-medium text-gray-900\",\n        children: \"Conditional Logic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowConditional(!showConditional),\n        className: \"text-blue-600 hover:text-blue-800 text-sm font-medium\",\n        children: showConditional ? 'Hide' : 'Add Condition'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showConditional && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 space-y-3 p-3 bg-blue-50 rounded-md\",\n      children: previousQuestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: ((_question$conditional = question.conditional) === null || _question$conditional === void 0 ? void 0 : _question$conditional.questionId) || '',\n            onChange: e => onUpdate({\n              conditional: e.target.value ? {\n                questionId: e.target.value,\n                value: ''\n              } : undefined\n            }),\n            className: \"col-span-2 border border-gray-300 rounded-md shadow-sm px-2 py-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), previousQuestions.map(q => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: q.id,\n              children: q.question\n            }, q.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: ((_question$conditional2 = question.conditional) === null || _question$conditional2 === void 0 ? void 0 : _question$conditional2.value) || '',\n            onChange: e => onUpdate({\n              conditional: question.conditional ? {\n                ...question.conditional,\n                value: e.target.value\n              } : undefined\n            }),\n            disabled: !((_question$conditional3 = question.conditional) !== null && _question$conditional3 !== void 0 && _question$conditional3.questionId),\n            className: \"border border-gray-300 rounded-md shadow-sm px-2 py-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Equals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"yes\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"no\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600\",\n          children: \"Show this question only when the selected question matches the specified value.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"Add more questions to this section to enable conditional logic.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ConditionalLogic, \"733FzxK7JthqSgwNRaSQI5eY6AQ=\");\n_c = ConditionalLogic;\nexport default ConditionalLogic;\nvar _c;\n$RefreshReg$(_c, \"ConditionalLogic\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConditionalLogic","question","section","onUpdate","_s","_question$conditional","_question$conditional2","_question$conditional3","showConditional","setShowConditional","previousQuestions","questions","filter","q","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","value","conditional","questionId","onChange","e","target","undefined","map","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/assessments/ConditionalLogic.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Question, Section } from '../../types';\r\n\r\ninterface ConditionalLogicProps {\r\n  question: Question;\r\n  section: Section;\r\n  onUpdate: (updates: Partial<Question>) => void;\r\n}\r\n\r\nconst ConditionalLogic: React.FC<ConditionalLogicProps> = ({ question, section, onUpdate }) => {\r\n  const [showConditional, setShowConditional] = useState(false);\r\n\r\n  const previousQuestions = section.questions.filter(q => q.id !== question.id);\r\n\r\n  return (\r\n    <div className=\"border-t border-gray-200 pt-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h4 className=\"text-sm font-medium text-gray-900\">Conditional Logic</h4>\r\n        <button\r\n          onClick={() => setShowConditional(!showConditional)}\r\n          className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\r\n        >\r\n          {showConditional ? 'Hide' : 'Add Condition'}\r\n        </button>\r\n      </div>\r\n\r\n      {showConditional && (\r\n        <div className=\"mt-3 space-y-3 p-3 bg-blue-50 rounded-md\">\r\n          {previousQuestions.length > 0 ? (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"grid grid-cols-3 gap-3\">\r\n                <select\r\n                  value={question.conditional?.questionId || ''}\r\n                  onChange={(e) => onUpdate({\r\n                    conditional: e.target.value ? {\r\n                      questionId: e.target.value,\r\n                      value: '',\r\n                    } : undefined\r\n                  })}\r\n                  className=\"col-span-2 border border-gray-300 rounded-md shadow-sm px-2 py-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                >\r\n                  <option value=\"\">Select question</option>\r\n                  {previousQuestions.map((q) => (\r\n                    <option key={q.id} value={q.id}>\r\n                      {q.question}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                \r\n                <select\r\n                  value={question.conditional?.value || ''}\r\n                  onChange={(e) => onUpdate({\r\n                    conditional: question.conditional ? {\r\n                      ...question.conditional,\r\n                      value: e.target.value,\r\n                    } : undefined\r\n                  })}\r\n                  disabled={!question.conditional?.questionId}\r\n                  className=\"border border-gray-300 rounded-md shadow-sm px-2 py-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                >\r\n                  <option value=\"\">Equals</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <p className=\"text-xs text-gray-600\">\r\n                Show this question only when the selected question matches the specified value.\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-sm text-gray-600\">\r\n              Add more questions to this section to enable conditional logic.\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConditionalLogic;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}