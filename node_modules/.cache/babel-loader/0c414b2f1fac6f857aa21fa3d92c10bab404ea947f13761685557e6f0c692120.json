{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\jobs\\\\JobList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport JobCard from './JobCard';\nimport { useJobs } from '../../hooks/useJobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = ({\n  jobs\n}) => {\n  _s();\n  const {\n    handleReorder\n  } = useJobs();\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const fromOrder = parseInt(result.draggableId);\n    const toOrder = result.destination.index + 1;\n    if (fromOrder !== toOrder) {\n      handleReorder(fromOrder, toOrder);\n    }\n  };\n  if (jobs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"mx-auto h-12 w-12 text-gray-400\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-2 text-sm font-medium text-gray-900\",\n        children: \"No jobs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-gray-500\",\n        children: \"Get started by creating a new job posting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"jobs\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        className: \"divide-y divide-gray-200\",\n        children: [jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job,\n          index: index\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"FXtC6g7ZowY+iOKF1aby7MdDcQc=\", false, function () {\n  return [useJobs];\n});\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","DragDropContext","Droppable","JobCard","useJobs","jsxDEV","_jsxDEV","JobList","jobs","_s","handleReorder","onDragEnd","result","destination","fromOrder","parseInt","draggableId","toOrder","index","length","className","children","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","droppableProps","ref","innerRef","map","job","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/jobs/JobList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\r\nimport { Job } from '../../types';\r\nimport JobCard from './JobCard';\r\nimport { useJobs } from '../../hooks/useJobs';\r\n\r\ninterface JobListProps {\r\n  jobs: Job[];\r\n}\r\n\r\nconst JobList: React.FC<JobListProps> = ({ jobs }) => {\r\n  const { handleReorder } = useJobs();\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return;\r\n\r\n    const fromOrder = parseInt(result.draggableId);\r\n    const toOrder = result.destination.index + 1;\r\n\r\n    if (fromOrder !== toOrder) {\r\n      handleReorder(fromOrder, toOrder);\r\n    }\r\n  };\r\n\r\n  if (jobs.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No jobs found</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          Get started by creating a new job posting.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"jobs\">\r\n        {(provided) => (\r\n          <div\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n            className=\"divide-y divide-gray-200\"\r\n          >\r\n            {jobs.map((job, index) => (\r\n              <JobCard key={job.id} job={job} index={index} />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default JobList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}