{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\jobs\\\\JobList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, sortableKeyboardCoordinates } from '@dnd-kit/sortable';\nimport JobCard from './JobCard';\nimport { useJobs } from '../../hooks/useJobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = ({\n  jobs\n}) => {\n  _s();\n  const {\n    handleReorder\n  } = useJobs();\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const onDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (over && active.id !== over.id) {\n      const fromOrder = parseInt(active.id);\n      const toOrder = parseInt(over.id);\n      if (fromOrder !== toOrder) {\n        handleReorder(fromOrder, toOrder);\n      }\n    }\n  };\n  if (jobs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"mx-auto h-12 w-12 text-gray-400\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 2,\n          d: \"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-2 text-sm font-medium text-gray-900\",\n        children: \"No jobs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-sm text-gray-500\",\n        children: \"Get started by creating a new job posting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCenter,\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(SortableContext, {\n      items: jobs.map(job => job.order.toString()),\n      strategy: verticalListSortingStrategy,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divide-y divide-gray-200\",\n        children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job,\n          index: index\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(JobList, \"t7G5KuhNCDbGocQrLIWbTwAh0uU=\", false, function () {\n  return [useJobs, useSensors, useSensor, useSensor];\n});\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","verticalListSortingStrategy","sortableKeyboardCoordinates","JobCard","useJobs","jsxDEV","_jsxDEV","JobList","jobs","_s","handleReorder","sensors","coordinateGetter","onDragEnd","event","active","over","id","fromOrder","parseInt","toOrder","length","className","children","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","collisionDetection","items","map","job","order","toString","strategy","index","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/jobs/JobList.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  DndContext,\r\n  closestCenter,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  DragEndEvent,\r\n} from '@dnd-kit/core';\r\nimport {\r\n  SortableContext,\r\n  verticalListSortingStrategy,\r\n  sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\nimport { Job } from '../../types';\r\nimport JobCard from './JobCard';\r\nimport { useJobs } from '../../hooks/useJobs';\r\n\r\ninterface JobListProps {\r\n  jobs: Job[];\r\n}\r\n\r\nconst JobList: React.FC<JobListProps> = ({ jobs }) => {\r\n  const { handleReorder } = useJobs();\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const onDragEnd = (event: DragEndEvent) => {\r\n    const { active, over } = event;\r\n\r\n    if (over && active.id !== over.id) {\r\n      const fromOrder = parseInt(active.id as string);\r\n      const toOrder = parseInt(over.id as string);\r\n\r\n      if (fromOrder !== toOrder) {\r\n        handleReorder(fromOrder, toOrder);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (jobs.length === 0) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No jobs found</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          Get started by creating a new job posting.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DndContext\r\n      sensors={sensors}\r\n      collisionDetection={closestCenter}\r\n      onDragEnd={onDragEnd}\r\n    >\r\n      <SortableContext items={jobs.map(job => job.order.toString())} strategy={verticalListSortingStrategy}>\r\n        <div className=\"divide-y divide-gray-200\">\r\n          {jobs.map((job, index) => (\r\n            <JobCard key={job.id} job={job} index={index} />\r\n          ))}\r\n        </div>\r\n      </SortableContext>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default JobList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}