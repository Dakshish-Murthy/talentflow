{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dakshish\\\\talentflow\\\\src\\\\components\\\\candidates\\\\KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { SortableContext, horizontalListSortingStrategy, sortableKeyboardCoordinates } from '@dnd-kit/sortable';\nimport { useCandidates } from '../../hooks/useCandidates';\nimport StageColumn from './StageColumn';\n\n// Create enhanced candidate interface locally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  candidates\n}) => {\n  _s();\n  const {\n    updateCandidateStage\n  } = useCandidates();\n  const stages = ['applied', 'screen', 'tech', 'offer', 'hired', 'rejected'];\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const handleDragStart = event => {\n    document.body.style.cursor = 'grabbing';\n  };\n  const handleDragEnd = event => {\n    document.body.style.cursor = '';\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    const candidateId = active.id;\n    const targetStage = over.id;\n\n    // Check if the drop target is a stage column\n    if (stages.includes(targetStage)) {\n      updateCandidateStage(candidateId, targetStage);\n    }\n  };\n  const handleDragOver = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n\n    // Add visual feedback for valid drop targets\n    const overElement = document.getElementById(over.id);\n    if (overElement && stages.includes(over.id)) {\n      overElement.classList.add('bg-blue-50', 'border-blue-200');\n    }\n  };\n  const handleDragCancel = () => {\n    document.body.style.cursor = '';\n\n    // Remove visual feedback from all stage columns\n    stages.forEach(stage => {\n      const element = document.getElementById(stage);\n      if (element) {\n        element.classList.remove('bg-blue-50', 'border-blue-200');\n      }\n    });\n  };\n  const getCandidatesByStage = stage => {\n    return candidates.filter(candidate => candidate.stage === stage);\n  };\n  const getStageLabel = stage => {\n    const labels = {\n      applied: 'Applied',\n      screen: 'Screening',\n      tech: 'Technical',\n      offer: 'Offer',\n      hired: 'Hired',\n      rejected: 'Rejected'\n    };\n    return labels[stage];\n  };\n  const getStageColor = stage => {\n    const colors = {\n      applied: 'from-blue-500 to-cyan-500',\n      screen: 'from-yellow-500 to-orange-500',\n      tech: 'from-purple-500 to-pink-500',\n      offer: 'from-green-500 to-emerald-500',\n      hired: 'from-emerald-500 to-teal-500',\n      rejected: 'from-red-500 to-pink-500'\n    };\n    return colors[stage];\n  };\n  const getStageDescription = stage => {\n    const descriptions = {\n      applied: 'New applications to review',\n      screen: 'Initial screening phase',\n      tech: 'Technical assessments',\n      offer: 'Offer extended to candidates',\n      hired: 'Successfully hired candidates',\n      rejected: 'Applications not proceeding'\n    };\n    return descriptions[stage];\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCenter,\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    onDragOver: handleDragOver,\n    onDragCancel: handleDragCancel,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-6 p-6 overflow-x-auto min-h-[700px]\",\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: stages,\n        strategy: horizontalListSortingStrategy,\n        children: stages.map(stage => /*#__PURE__*/_jsxDEV(StageColumn, {\n          stage: stage,\n          candidates: getCandidatesByStage(stage),\n          stageLabel: getStageLabel(stage),\n          stageColor: getStageColor(stage),\n          stageDescription: getStageDescription(stage)\n        }, stage, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"0pA+FRD1F9bjGwMYhZ2miavneyA=\", false, function () {\n  return [useCandidates, useSensors, useSensor, useSensor];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","SortableContext","horizontalListSortingStrategy","sortableKeyboardCoordinates","useCandidates","StageColumn","jsxDEV","_jsxDEV","KanbanBoard","candidates","_s","updateCandidateStage","stages","sensors","activationConstraint","distance","coordinateGetter","handleDragStart","event","document","body","style","cursor","handleDragEnd","active","over","candidateId","id","targetStage","includes","handleDragOver","overElement","getElementById","classList","add","handleDragCancel","forEach","stage","element","remove","getCandidatesByStage","filter","candidate","getStageLabel","labels","applied","screen","tech","offer","hired","rejected","getStageColor","colors","getStageDescription","descriptions","collisionDetection","onDragStart","onDragEnd","onDragOver","onDragCancel","children","className","items","strategy","map","stageLabel","stageColor","stageDescription","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dakshish/talentflow/src/components/candidates/KanbanBoard.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  DndContext,\r\n  closestCenter,\r\n  KeyboardSensor,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  DragEndEvent,\r\n  DragOverEvent,\r\n  DragStartEvent,\r\n} from '@dnd-kit/core';\r\nimport {\r\n  SortableContext,\r\n  horizontalListSortingStrategy,\r\n  sortableKeyboardCoordinates,\r\n} from '@dnd-kit/sortable';\r\nimport { Candidate } from '../../types';\r\nimport { useCandidates } from '../../hooks/useCandidates';\r\nimport StageColumn from './StageColumn';\r\n\r\n// Create enhanced candidate interface locally\r\ninterface EnhancedCandidate extends Candidate {\r\n  jobTitle?: string;\r\n  experience?: string;\r\n  location?: string;\r\n  skills?: string[];\r\n}\r\n\r\ninterface KanbanBoardProps {\r\n  candidates: EnhancedCandidate[];\r\n}\r\n\r\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ candidates }) => {\r\n  const { updateCandidateStage } = useCandidates();\r\n\r\n  const stages: Candidate['stage'][] = ['applied', 'screen', 'tech', 'offer', 'hired', 'rejected'];\r\n\r\n  const sensors = useSensors(\r\n    useSensor(PointerSensor, {\r\n      activationConstraint: {\r\n        distance: 8,\r\n      },\r\n    }),\r\n    useSensor(KeyboardSensor, {\r\n      coordinateGetter: sortableKeyboardCoordinates,\r\n    })\r\n  );\r\n\r\n  const handleDragStart = (event: DragStartEvent) => {\r\n    document.body.style.cursor = 'grabbing';\r\n  };\r\n\r\n  const handleDragEnd = (event: DragEndEvent) => {\r\n    document.body.style.cursor = '';\r\n    \r\n    const { active, over } = event;\r\n\r\n    if (!over) return;\r\n\r\n    const candidateId = active.id as string;\r\n    const targetStage = over.id as Candidate['stage'];\r\n\r\n    // Check if the drop target is a stage column\r\n    if (stages.includes(targetStage)) {\r\n      updateCandidateStage(candidateId, targetStage);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event: DragOverEvent) => {\r\n    const { active, over } = event;\r\n    \r\n    if (!over) return;\r\n\r\n    // Add visual feedback for valid drop targets\r\n    const overElement = document.getElementById(over.id as string);\r\n    if (overElement && stages.includes(over.id as Candidate['stage'])) {\r\n      overElement.classList.add('bg-blue-50', 'border-blue-200');\r\n    }\r\n  };\r\n\r\n  const handleDragCancel = () => {\r\n    document.body.style.cursor = '';\r\n    \r\n    // Remove visual feedback from all stage columns\r\n    stages.forEach(stage => {\r\n      const element = document.getElementById(stage);\r\n      if (element) {\r\n        element.classList.remove('bg-blue-50', 'border-blue-200');\r\n      }\r\n    });\r\n  };\r\n\r\n  const getCandidatesByStage = (stage: Candidate['stage']) => {\r\n    return candidates.filter(candidate => candidate.stage === stage);\r\n  };\r\n\r\n  const getStageLabel = (stage: Candidate['stage']) => {\r\n    const labels = {\r\n      applied: 'Applied',\r\n      screen: 'Screening',\r\n      tech: 'Technical',\r\n      offer: 'Offer',\r\n      hired: 'Hired',\r\n      rejected: 'Rejected',\r\n    };\r\n    return labels[stage];\r\n  };\r\n\r\n  const getStageColor = (stage: Candidate['stage']) => {\r\n    const colors = {\r\n      applied: 'from-blue-500 to-cyan-500',\r\n      screen: 'from-yellow-500 to-orange-500',\r\n      tech: 'from-purple-500 to-pink-500',\r\n      offer: 'from-green-500 to-emerald-500',\r\n      hired: 'from-emerald-500 to-teal-500',\r\n      rejected: 'from-red-500 to-pink-500',\r\n    };\r\n    return colors[stage];\r\n  };\r\n\r\n  const getStageDescription = (stage: Candidate['stage']) => {\r\n    const descriptions = {\r\n      applied: 'New applications to review',\r\n      screen: 'Initial screening phase',\r\n      tech: 'Technical assessments',\r\n      offer: 'Offer extended to candidates',\r\n      hired: 'Successfully hired candidates',\r\n      rejected: 'Applications not proceeding',\r\n    };\r\n    return descriptions[stage];\r\n  };\r\n\r\n  return (\r\n    <DndContext\r\n      sensors={sensors}\r\n      collisionDetection={closestCenter}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onDragOver={handleDragOver}\r\n      onDragCancel={handleDragCancel}\r\n    >\r\n      <div className=\"flex space-x-6 p-6 overflow-x-auto min-h-[700px]\">\r\n        <SortableContext items={stages} strategy={horizontalListSortingStrategy}>\r\n          {stages.map((stage) => (\r\n            <StageColumn\r\n              key={stage}\r\n              stage={stage}\r\n              candidates={getCandidatesByStage(stage)}\r\n              stageLabel={getStageLabel(stage)}\r\n              stageColor={getStageColor(stage)}\r\n              stageDescription={getStageDescription(stage)}\r\n            />\r\n          ))}\r\n        </SortableContext>\r\n      </div>\r\n    </DndContext>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}