{"ast":null,"code":"import { api } from './api';\nexport const assessmentsService = {\n  async getAssessment(jobId) {\n    try {\n      const response = await api.getAssessment(jobId);\n      return response;\n    } catch (error) {\n      // Return null if assessment doesn't exist\n      return null;\n    }\n  },\n  async createAssessment(jobId, assessmentData) {\n    const response = await api.createAssessment(jobId, assessmentData);\n    return response;\n  },\n  async updateAssessment(jobId, assessmentData) {\n    const response = await api.updateAssessment(jobId, assessmentData);\n    return response;\n  },\n  async submitAssessment(assessmentId, responses) {\n    const response = await api.submitAssessment(assessmentId, responses);\n    return response;\n  },\n  async saveAssessment(assessment) {\n    const response = await api.saveAssessment(assessment);\n    return response;\n  }\n};","map":{"version":3,"names":["api","assessmentsService","getAssessment","jobId","response","error","createAssessment","assessmentData","updateAssessment","submitAssessment","assessmentId","responses","saveAssessment","assessment"],"sources":["C:/Users/Dakshish/talentflow/src/services/assessmentsService.ts"],"sourcesContent":["import { Assessment, AssessmentResponse } from '../types';\r\nimport { api } from './api';\r\n\r\nexport const assessmentsService = {\r\n  async getAssessment(jobId: string) {\r\n    try {\r\n      const response = await api.getAssessment(jobId);\r\n      return response;\r\n    } catch (error) {\r\n      // Return null if assessment doesn't exist\r\n      return null;\r\n    }\r\n  },\r\n\r\n  async createAssessment(jobId: string, assessmentData: Partial<Assessment>) {\r\n    const response = await api.createAssessment(jobId, assessmentData);\r\n    return response;\r\n  },\r\n\r\n  async updateAssessment(jobId: string, assessmentData: Partial<Assessment>) {\r\n    const response = await api.updateAssessment(jobId, assessmentData);\r\n    return response;\r\n  },\r\n\r\n  async submitAssessment(assessmentId: string, responses: any) {\r\n    const response = await api.submitAssessment(assessmentId, responses);\r\n    return response;\r\n  },\r\n\r\n  async saveAssessment(assessment: Assessment) {\r\n    const response = await api.saveAssessment(assessment);\r\n    return response;\r\n  }\r\n};"],"mappings":"AACA,SAASA,GAAG,QAAQ,OAAO;AAE3B,OAAO,MAAMC,kBAAkB,GAAG;EAChC,MAAMC,aAAaA,CAACC,KAAa,EAAE;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACE,aAAa,CAACC,KAAK,CAAC;MAC/C,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACA,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMC,gBAAgBA,CAACH,KAAa,EAAEI,cAAmC,EAAE;IACzE,MAAMH,QAAQ,GAAG,MAAMJ,GAAG,CAACM,gBAAgB,CAACH,KAAK,EAAEI,cAAc,CAAC;IAClE,OAAOH,QAAQ;EACjB,CAAC;EAED,MAAMI,gBAAgBA,CAACL,KAAa,EAAEI,cAAmC,EAAE;IACzE,MAAMH,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,gBAAgB,CAACL,KAAK,EAAEI,cAAc,CAAC;IAClE,OAAOH,QAAQ;EACjB,CAAC;EAED,MAAMK,gBAAgBA,CAACC,YAAoB,EAAEC,SAAc,EAAE;IAC3D,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACS,gBAAgB,CAACC,YAAY,EAAEC,SAAS,CAAC;IACpE,OAAOP,QAAQ;EACjB,CAAC;EAED,MAAMQ,cAAcA,CAACC,UAAsB,EAAE;IAC3C,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACY,cAAc,CAACC,UAAU,CAAC;IACrD,OAAOT,QAAQ;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}