{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { candidatesService } from '../../services/candidatesService';\nconst initialState = {\n  candidates: [],\n  currentCandidate: null,\n  loading: false,\n  error: null,\n  filters: {\n    search: '',\n    stage: ''\n  },\n  pagination: {\n    page: 1,\n    pageSize: 50,\n    total: 0\n  }\n};\n\n// Async thunks\nexport const fetchCandidates = createAsyncThunk('candidates/fetchCandidates', async (params = {}) => {\n  const response = await candidatesService.getCandidates(params);\n  return response;\n});\nexport const updateCandidate = createAsyncThunk('candidates/updateCandidate', async ({\n  id,\n  updates\n}) => {\n  const response = await candidatesService.updateCandidate(id, updates);\n  return response;\n});\nexport const addCandidateNote = createAsyncThunk('candidates/addNote', async ({\n  candidateId,\n  note\n}) => {\n  const candidate = await candidatesService.getCandidateById(candidateId);\n  const updatedNotes = [...(candidate.notes || []), {\n    ...note,\n    id: `note-${Date.now()}`,\n    createdAt: new Date()\n  }];\n  const updatedCandidate = await candidatesService.updateCandidate(candidateId, {\n    notes: updatedNotes\n  });\n  return updatedCandidate;\n});\nexport const fetchCandidateTimeline = createAsyncThunk('candidates/fetchTimeline', async candidateId => {\n  const response = await candidatesService.getCandidateTimeline(candidateId);\n  return {\n    candidateId,\n    timeline: response\n  };\n});\nconst candidatesSlice = createSlice({\n  name: 'candidates',\n  initialState,\n  reducers: {\n    setFilters: (state, action) => {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n      state.pagination.page = 1;\n    },\n    setPagination: (state, action) => {\n      state.pagination = {\n        ...state.pagination,\n        ...action.payload\n      };\n    },\n    setCurrentCandidate: (state, action) => {\n      state.currentCandidate = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    // Optimistic update for stage changes\n    optimisticStageChange: (state, action) => {\n      var _state$currentCandida;\n      const {\n        candidateId,\n        newStage\n      } = action.payload;\n      const candidate = state.candidates.find(c => c.id === candidateId);\n      if (candidate) {\n        candidate.stage = newStage;\n      }\n      if (((_state$currentCandida = state.currentCandidate) === null || _state$currentCandida === void 0 ? void 0 : _state$currentCandida.id) === candidateId) {\n        state.currentCandidate.stage = newStage;\n      }\n    },\n    // Rollback for failed stage change\n    rollbackStageChange: (state, action) => {\n      var _state$currentCandida2;\n      const {\n        candidateId,\n        oldStage\n      } = action.payload;\n      const candidate = state.candidates.find(c => c.id === candidateId);\n      if (candidate) {\n        candidate.stage = oldStage;\n      }\n      if (((_state$currentCandida2 = state.currentCandidate) === null || _state$currentCandida2 === void 0 ? void 0 : _state$currentCandida2.id) === candidateId) {\n        state.currentCandidate.stage = oldStage;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch candidates\n    .addCase(fetchCandidates.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchCandidates.fulfilled, (state, action) => {\n      state.loading = false;\n      state.candidates = action.payload.data;\n      state.pagination = {\n        ...state.pagination,\n        total: action.payload.total,\n        page: action.payload.page\n      };\n    }).addCase(fetchCandidates.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch candidates';\n    })\n    // Update candidate\n    .addCase(updateCandidate.fulfilled, (state, action) => {\n      var _state$currentCandida3;\n      const index = state.candidates.findIndex(candidate => candidate.id === action.payload.id);\n      if (index !== -1) {\n        state.candidates[index] = action.payload;\n      }\n      if (((_state$currentCandida3 = state.currentCandidate) === null || _state$currentCandida3 === void 0 ? void 0 : _state$currentCandida3.id) === action.payload.id) {\n        state.currentCandidate = action.payload;\n      }\n    }).addCase(updateCandidate.rejected, (state, action) => {\n      state.error = action.error.message || 'Failed to update candidate';\n    })\n    // Add note\n    .addCase(addCandidateNote.fulfilled, (state, action) => {\n      var _state$currentCandida4;\n      if (((_state$currentCandida4 = state.currentCandidate) === null || _state$currentCandida4 === void 0 ? void 0 : _state$currentCandida4.id) === action.payload.id) {\n        state.currentCandidate = action.payload;\n      }\n    });\n  }\n});\nexport const {\n  setFilters,\n  setPagination,\n  setCurrentCandidate,\n  clearError,\n  optimisticStageChange,\n  rollbackStageChange\n} = candidatesSlice.actions;\nexport default candidatesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","candidatesService","initialState","candidates","currentCandidate","loading","error","filters","search","stage","pagination","page","pageSize","total","fetchCandidates","params","response","getCandidates","updateCandidate","id","updates","addCandidateNote","candidateId","note","candidate","getCandidateById","updatedNotes","notes","Date","now","createdAt","updatedCandidate","fetchCandidateTimeline","getCandidateTimeline","timeline","candidatesSlice","name","reducers","setFilters","state","action","payload","setPagination","setCurrentCandidate","clearError","optimisticStageChange","_state$currentCandida","newStage","find","c","rollbackStageChange","_state$currentCandida2","oldStage","extraReducers","builder","addCase","pending","fulfilled","data","rejected","message","_state$currentCandida3","index","findIndex","_state$currentCandida4","actions","reducer"],"sources":["C:/Users/Dakshish/talentflow/src/store/slices/candidatesSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Candidate, Note } from '../../types';\r\nimport { candidatesService } from '../../services/candidatesService';\r\n\r\ninterface CandidatesState {\r\n  candidates: Candidate[];\r\n  currentCandidate: Candidate | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  filters: {\r\n    search: string;\r\n    stage: string;\r\n  };\r\n  pagination: {\r\n    page: number;\r\n    pageSize: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\nconst initialState: CandidatesState = {\r\n  candidates: [],\r\n  currentCandidate: null,\r\n  loading: false,\r\n  error: null,\r\n  filters: {\r\n    search: '',\r\n    stage: '',\r\n  },\r\n  pagination: {\r\n    page: 1,\r\n    pageSize: 50,\r\n    total: 0,\r\n  },\r\n};\r\n\r\n// Async thunks\r\nexport const fetchCandidates = createAsyncThunk(\r\n  'candidates/fetchCandidates',\r\n  async (params: { page?: number; pageSize?: number; search?: string; stage?: string } = {}) => {\r\n    const response = await candidatesService.getCandidates(params);\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const updateCandidate = createAsyncThunk(\r\n  'candidates/updateCandidate',\r\n  async ({ id, updates }: { id: string; updates: Partial<Candidate> }) => {\r\n    const response = await candidatesService.updateCandidate(id, updates);\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const addCandidateNote = createAsyncThunk(\r\n  'candidates/addNote',\r\n  async ({ candidateId, note }: { candidateId: string; note: Omit<Note, 'id' | 'createdAt'> }) => {\r\n    const candidate = await candidatesService.getCandidateById(candidateId);\r\n    const updatedNotes = [\r\n      ...(candidate.notes || []),\r\n      {\r\n        ...note,\r\n        id: `note-${Date.now()}`,\r\n        createdAt: new Date(),\r\n      }\r\n    ];\r\n    \r\n    const updatedCandidate = await candidatesService.updateCandidate(candidateId, {\r\n      notes: updatedNotes\r\n    });\r\n    return updatedCandidate;\r\n  }\r\n);\r\n\r\nexport const fetchCandidateTimeline = createAsyncThunk(\r\n  'candidates/fetchTimeline',\r\n  async (candidateId: string) => {\r\n    const response = await candidatesService.getCandidateTimeline(candidateId);\r\n    return { candidateId, timeline: response };\r\n  }\r\n);\r\n\r\nconst candidatesSlice = createSlice({\r\n  name: 'candidates',\r\n  initialState,\r\n  reducers: {\r\n    setFilters: (state, action: PayloadAction<Partial<CandidatesState['filters']>>) => {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n      state.pagination.page = 1;\r\n    },\r\n    setPagination: (state, action: PayloadAction<Partial<CandidatesState['pagination']>>) => {\r\n      state.pagination = { ...state.pagination, ...action.payload };\r\n    },\r\n    setCurrentCandidate: (state, action: PayloadAction<Candidate | null>) => {\r\n      state.currentCandidate = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    // Optimistic update for stage changes\r\n    optimisticStageChange: (state, action: PayloadAction<{ candidateId: string; newStage: Candidate['stage'] }>) => {\r\n      const { candidateId, newStage } = action.payload;\r\n      const candidate = state.candidates.find(c => c.id === candidateId);\r\n      if (candidate) {\r\n        candidate.stage = newStage;\r\n      }\r\n      if (state.currentCandidate?.id === candidateId) {\r\n        state.currentCandidate.stage = newStage;\r\n      }\r\n    },\r\n    // Rollback for failed stage change\r\n    rollbackStageChange: (state, action: PayloadAction<{ candidateId: string; oldStage: Candidate['stage'] }>) => {\r\n      const { candidateId, oldStage } = action.payload;\r\n      const candidate = state.candidates.find(c => c.id === candidateId);\r\n      if (candidate) {\r\n        candidate.stage = oldStage;\r\n      }\r\n      if (state.currentCandidate?.id === candidateId) {\r\n        state.currentCandidate.stage = oldStage;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch candidates\r\n      .addCase(fetchCandidates.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchCandidates.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.candidates = action.payload.data;\r\n        state.pagination = {\r\n          ...state.pagination,\r\n          total: action.payload.total,\r\n          page: action.payload.page,\r\n        };\r\n      })\r\n      .addCase(fetchCandidates.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || 'Failed to fetch candidates';\r\n      })\r\n      // Update candidate\r\n      .addCase(updateCandidate.fulfilled, (state, action) => {\r\n        const index = state.candidates.findIndex(candidate => candidate.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state.candidates[index] = action.payload;\r\n        }\r\n        if (state.currentCandidate?.id === action.payload.id) {\r\n          state.currentCandidate = action.payload;\r\n        }\r\n      })\r\n      .addCase(updateCandidate.rejected, (state, action) => {\r\n        state.error = action.error.message || 'Failed to update candidate';\r\n      })\r\n      // Add note\r\n      .addCase(addCandidateNote.fulfilled, (state, action) => {\r\n        if (state.currentCandidate?.id === action.payload.id) {\r\n          state.currentCandidate = action.payload;\r\n        }\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFilters,\r\n  setPagination,\r\n  setCurrentCandidate,\r\n  clearError,\r\n  optimisticStageChange,\r\n  rollbackStageChange,\r\n} = candidatesSlice.actions;\r\n\r\nexport default candidatesSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}